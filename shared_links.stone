namespace sharing

import common
import files
import users

alias Id = files.Id
alias Path = files.Path
alias Rev = files.Rev
alias TeamInfo = users.Team
alias ReadPath = files.ReadPath

#
# Link Metadata definitions and route
#

union_closed RequestedVisibility
    "The access permission that can be requested by the caller for the shared link.
    Note that the final resolved visibility of the shared link takes into account other aspects,
    such as team and shared folder settings.
    Check the :type:`ResolvedVisibility` for more info on the possible resolved visibility values
    of shared links. "

    public
        "Anyone who has received the link can access it. No login required."
    team_only
        "Only members of the same team can
        access the link. Login is required."
    password
        "A link-specific password is required to access the
        link. Login is not required."

union ResolvedVisibility extends RequestedVisibility
    "The actual access permissions values of shared links after taking into account user
    preferences and the team and shared folder settings.
    Check the :type:`RequestedVisibility` for more info on the possible visibility values
    that can be set by the shared link's owner. "

    team_and_password
        "Only members of the same team who
        have the link-specific password can access the link. Login is required."
    shared_folder_only
        "Only members of the shared folder containing the linked file
        can access the link. Login is required."

union SharedLinkAccessFailureReason
    login_required
        "User is not logged in."
    email_verify_required
        "User's email is not verified."
    password_required
        "The link is password protected."
    team_only
        "Access is allowed for team members only."
    owner_only
        "Access is allowed for the shared link's owner only."

struct LinkPermissions
    resolved_visibility ResolvedVisibility?
        "The current visibility of the link after considering the shared links policies of the
        the team (in case the link's owner is part of a team) and the shared folder (in case the
        linked file is part of a shared folder). This field is shown only if the caller has access
        to this info (the link's owner always has access to this data)."

    requested_visibility RequestedVisibility?
        "The shared link's requested visibility. This can be overridden by the team and shared
        folder policies. The final visibility, after considering these policies, can be found in
        :field:`resolved_visibility`. This is shown only if the caller is the link's
        owner."

    can_revoke Boolean
        "Whether the caller can revoke the shared link"
    revoke_failure_reason SharedLinkAccessFailureReason?
        "The failure reason for revoking the link. This field will only be present if the
        :field:`can_revoke` is :val:`false`."

    example default
        resolved_visibility = public
        can_revoke = false
        revoke_failure_reason = owner_only

struct TeamMemberInfo
    "Information about a team member."

    team_info TeamInfo
        "Information about the member's team"
    display_name String
        "The display name of the user."
    member_id String?
        "ID of user as a member of a team. This field will only be present if the member is in the
        same team as current user."

    example default
        team_info = default
        display_name = "Roger Rabbit"
        member_id = "dbmid:abcd1234"

struct SharedLinkMetadata
    "The metadata of a shared link "

    union
        file FileLinkMetadata
        folder FolderLinkMetadata

    url String
        "URL of the shared link."
    id Id?
        "A unique identifier for the linked file."
    name String
        "The linked file name (including extension).
        This never contains a slash."
    expires common.DropboxTimestamp?
        "Expiration time, if set. By default the link won't expire."
    path_lower String?
        "The lowercased full path in the user's Dropbox. This always starts with a slash.
        This field will only be present only if the linked file is in the authenticated user's
         dropbox."
    link_permissions LinkPermissions
        "The link's access permissions."
    team_member_info TeamMemberInfo?
        "The team membership information of the link's owner.  This field will only be present
         if the link's owner is a team member."
    content_owner_team_info TeamInfo?
        "The team information of the content's owner. This field will only be present if
        the content's owner is a team member and the content's owner team is different from the
        link's owner team."

    example default
        file = default

    example folder_link_metadata
        folder = default

struct FileLinkMetadata extends SharedLinkMetadata
    "The metadata of a file shared link "

    client_modified common.DropboxTimestamp
        "The modification time set by the desktop client
        when the file was added to Dropbox. Since this time is not verified
        (the Dropbox server stores whatever the desktop client sends up), this
        should only be used for display purposes (such as sorting) and not,
        for example, to determine if a file has changed or not."
    server_modified common.DropboxTimestamp
        "The last time the file was modified on Dropbox."
    rev Rev
        "A unique identifier for the current revision of a file. This field is
        the same rev as elsewhere in the API and can be used to detect changes
        and avoid conflicts."
    size UInt64
        "The file size in bytes."

    example default
        url = "https://www.dropbox.com/s/2sn712vy1ovegw8/Prime_Numbers.txt?dl=0"
        id = "id:a4ayc_80_OEAAAAAAAAAXw"
        name = "Prime_Numbers.txt"
        path_lower = "/homework/math/prime_numbers.txt"
        link_permissions = default
        team_member_info = default
        client_modified = "2015-05-12T15:50:38Z"
        server_modified = "2015-05-12T15:50:38Z"
        rev = "a1c10ce0dd78"
        size = 7212

struct FolderLinkMetadata extends SharedLinkMetadata
    "The metadata of a folder shared link "

    example default
        url = "https://www.dropbox.com/sh/s6fvw6ol7rmqo1x/AAAgWRSbjmYDvPpDB30Sykjfa?dl=0"
        id = "id:a4ayc_80_OEAAAAAAAAAXw"
        name = "Math"
        path_lower = "/homework/math"
        team_member_info = default
        link_permissions = default

struct SharedLinkSettings
    requested_visibility RequestedVisibility?
        "The requested access for this shared link."
    link_password String?
        "If :field:`requested_visibility` is :field:`RequestedVisibility.password` this is needed
        to specify the password to access the link. "
    expires common.DropboxTimestamp?
        "Expiration time of the shared link. By default the link won't expire."

    example default
        requested_visibility = public

union_closed SharedLinkSettingsError
    invalid_settings
        "The given settings are invalid
        (for example, all attributes of the :type:`SharedLinkSettings` are empty,
        the requested visibility is :field:`RequestedVisibility.password` but the
        :field:`SharedLinkSettings.link_password` is missing, :field:`SharedLinkSettings.expires`
        is set to the past, etc.)"

    not_authorized
        "User is not allowed to modify the settings of this link. Note that basic
        users can only set :field:`RequestedVisibility.public`
        as the :field:`SharedLinkSettings.requested_visibility` and cannot
        set :field:`SharedLinkSettings.expires`"

#
# Create shared link with settings definitions and route
#

struct CreateSharedLinkWithSettingsArg
    path ReadPath
        "The path to be shared by the shared link"
    settings SharedLinkSettings?
        "The requested settings for the newly created shared link"

    example default
        path = "/Prime_Numbers.txt"
        settings = default

union_closed CreateSharedLinkWithSettingsError
    path files.LookupError
    email_not_verified
        "User's email should be verified"
    shared_link_already_exists
        "The shared link already exists"
    settings_error SharedLinkSettingsError
        "There is an error with the given settings"
    access_denied
        "Access to the requested path is forbidden"

route create_shared_link_with_settings(CreateSharedLinkWithSettingsArg, SharedLinkMetadata, CreateSharedLinkWithSettingsError)
    "Create a shared link with custom settings.
    If no settings are given then the default visibility is :field:`RequestedVisibility.public`
    (The resolved visibility, though, may depend on other aspects such as team and shared folder
    settings). "

    attrs
        owner = "sharing"
